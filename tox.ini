[tox]
envlist =
    black
    docs
    isort
    pep8
    pydocstyle
    pypi-description
    towncrier
    py{3.10}
skip_missing_interpreters = true
skipsdist = True

[testenv]
alwayscopy = True
basepython = python3.10
commands =
    - {envpython} -mpip uninstall -y book_search
    - {envpython} -mpip install -r requirements.txt
    {env:COMMAND:pytest} {posargs}
deps =
    -r{toxinidir}/requirements.txt
passenv =
    TERM
    TERMINFO
    PIP_*
    PYTEST_*
    COMMAND
    COMMAND_PRE
    COMMAND_POST
    BUILD_DIR
setenv =
    PYTHONDONTWRITEBYTECODE = 1

[testenv:docs]
commands =
    - {envpython} -mpip install -r requirements.txt
    {envpython} -m invoke docbuild
deps =
    -rrequirements.txt
setenv =
    BUILD_DIR=../{env:BUILD_DIR:"docs/_build/html"}
skip_install = true

[testenv:black]
commands =
    {envpython} -m black --check --diff .
deps = black==22.3.0
skip_install = true

[testenv:blacken]
commands =
    {envpython} -m black .
deps = {[testenv:black]deps}
skip_install = true

[testenv:isort]
commands =
    {envpython} -m isort -c --df book_search tests
deps = isort~=5.10.0
skip_install = true

[testenv:isort_format]
commands =
    {envpython} -m isort book_search tests
deps = {[testenv:isort]deps}
skip_install = true

[testenv:pep8]
commands =
    {envpython} -m flake8
    {envpython} -m interrogate -c pyproject.toml book_search tests
deps =
    interrogate
    flake8~=3.9.2
    flake8-broken-line
    flake8-bugbear
    flake8-builtins
    flake8-coding
    flake8-commas
    flake8-comprehensions
    flake8-eradicate
    flake8-quotes
    flake8-tidy-imports
    pep8-naming
skip_install = true


[testenv:pydocstyle]
commands = {envpython} -mpydocstyle book_search
deps = pydocstyle
skip_install = true


[testenv:pypi-description]
commands =
    {envpython} -m invoke clean
    {envpython} -m pep517.build .
    {envpython} -m twine check dist/*
deps =
    invoke
    check-manifest
    pep517
    twine
skip_install = true

[testenv:towncrier]
commands =
    {envpython} -m invoke towncrier-check
deps =
    invoke
skip_install = true

[testenv:release]
commands =
    {envpython} -m invoke clean
    {envpython} -m pep517.build .
    {envpython} -m twine upload {posargs} dist/*
deps = {[testenv:pypi-description]deps}
passenv =
    TWINE_*
skip_install = true

[pydocstyle]
convention = pep257
# http://www.pydocstyle.org/en/stable/error_codes.html
add_ignore = D100,D101,D104,D105,D106,D107,D412,D200
add_select = D204,D205,D214,D413

[flake8]
exclude = *.egg-info,.git,.settings,.tox,build,dist,docs,requirements,tmp,*migrations*,tests,data,.venv
ignore = E800, W503, C812, C813, C815, C408
max-line-length = 119
# flake8-quotes
inline-quotes = double
# flake8-coding
no-accept-encodings = True
# flake8-tidy-imports
banned-modules = __future__ = this project supports python3 only

[isort]
combine_as_imports = true
default_section = THIRDPARTY
force_grid_wrap = 0
include_trailing_comma = true
known_first_party = book_search
line_length = 119
multi_line_output = 3
skip = data, .tox
use_parentheses = True

[check-manifest]
ignore =
    .*
    *.ini
    *.in
    *.toml
    *.json
    *.lock
    *.txt
    *.rst
    *.yml
    *.yaml
    .tx/**
    .gitlab/**
    .idea/**
    changes/**
    docs/**
    tasks.py
    tests/**
    *.mo
ignore-bad-ideas =
    *.mo

[pytest]
python_files = test_*.py
traceback = short
